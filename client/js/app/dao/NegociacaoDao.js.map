{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","console","log","_connecion","request","transaction","objectStore","add","onsuccess","e","onerror","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","name","clear"],"mappings":";;;;;;;;IAAMA,a;;;AAEF,yBAAYC,UAAZ,EAAwB;AAAA;;AACpB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACH;;;;6BAEQC,U,EAAY;AAAA;;AAEjB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpCC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,UAAjB;;AAEA,YAAIC,OAAO,GAAG,KAAI,CAACT,WAAL,CAAiBU,WAAjB,CAA6B,CAAC,KAAI,CAACT,MAAN,CAA7B,EAA4C,WAA5C,EACTU,WADS,CACG,KAAI,CAACV,MADR,EAETW,GAFS,CAELV,UAFK,CAAd;;AAIAO,QAAAA,OAAO,CAACI,SAAR,GAAoB,UAAAC,CAAC,EAAI;AACrBV,UAAAA,OAAO;AACV,SAFD;;AAIAK,QAAAA,OAAO,CAACM,OAAR,GAAkB,UAAAD,CAAC,EAAI;AACnBR,UAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACE,MAAF,CAASC,KAArB;AACAZ,UAAAA,MAAM,CAAC,yCAAD,CAAN;AACH,SAHD;AAIH,OAhBM,CAAP;AAiBH;;;iCAEY;AAAA;;AAET,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,YAAIa,MAAM,GAAG,MAAI,CAAClB,WAAL,CACRU,WADQ,CACI,MAAI,CAACT,MADT,EACiB,WADjB,EAERU,WAFQ,CAEI,MAAI,CAACV,MAFT,EAGRkB,UAHQ,EAAb;;AAKA,YAAIC,WAAW,GAAG,EAAlB;;AAEAF,QAAAA,MAAM,CAACL,SAAP,GAAmB,UAAAC,CAAC,EAAI;AAEpB,cAAIO,KAAK,GAAGP,CAAC,CAACE,MAAF,CAASM,MAArB;;AAEA,cAAID,KAAJ,EAAW;AAEP,gBAAIE,IAAI,GAAGF,KAAK,CAACG,KAAjB;AAEAJ,YAAAA,WAAW,CAACK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,IAAI,CAACI,KAApB,EAA2BJ,IAAI,CAACK,WAAhC,EAA6CL,IAAI,CAACM,MAAlD,CAAjB;AAEAR,YAAAA,KAAK,YAAL;AAEH,WARD,MAQO;AACHjB,YAAAA,OAAO,CAACgB,WAAD,CAAP;AACH;AACJ,SAfD;;AAiBAF,QAAAA,MAAM,CAACH,OAAP,GAAiB,UAAAD,CAAC,EAAI;AAClBR,UAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACE,MAAF,CAASC,KAAT,CAAea,IAA3B;AACAzB,UAAAA,MAAM,CAAC,wCAAD,CAAN;AACH,SAHD;AAKH,OA/BM,CAAP;AAgCH;;;iCAEY;AAAA;;AAET,aAAO,IAAIF,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAErC,YAAII,OAAO,GAAG,MAAI,CAACT,WAAL,CACTU,WADS,CACG,MAAI,CAACT,MADR,EACgB,WADhB,EAETU,WAFS,CAEG,MAAI,CAACV,MAFR,EAGT8B,KAHS,EAAd;;AAKAtB,QAAAA,OAAO,CAACI,SAAR,GAAoB,UAAAC,CAAC;AAAA,iBAAIV,OAAO,CAAC,qCAAD,CAAX;AAAA,SAArB;;AAEAK,QAAAA,OAAO,CAACM,OAAR,GAAkB,UAAAD,CAAC;AAAA,iBAAIT,MAAM,CAAC,yCAAD,CAAV;AAAA,SAAnB;AAEH,OAXM,CAAP;AAYH","sourcesContent":["class NegociacaoDao {\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'Negociacoes';\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n\n            console.log(this._connecion);\n\n            let request = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = e => {\n                resolve();\n            }\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível adicionar a negociação');\n            }\n        });\n    }\n\n    listaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection\n                .transaction(this._store, 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacoes = [];\n\n            cursor.onsuccess = e => {\n\n                let atual = e.target.result;\n\n                if (atual) {\n\n                    let dado = atual.value;\n\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n                    atual.continue();\n\n                } else {\n                    resolve(negociacoes);\n                }\n            }\n\n            cursor.onerror = e => {\n                console.log(e.target.error.name);\n                reject('Não foi possível listar as negociações');\n            }\n\n        });\n    }\n\n    apagaTodos() {\n\n        return new Promise( (resolve, reject) => {\n\n            let request = this._connection\n                .transaction(this._store, 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => resolve('Negociações removidadas com sucesso');\n\n            request.onerror = e => reject('Não foi possível remover as negociações');\n\n        });\n    }\n}"],"file":"NegociacaoDao.js"}